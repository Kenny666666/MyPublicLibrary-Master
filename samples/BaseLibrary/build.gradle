apply plugin: 'com.android.application'
apply plugin: 'bugly'

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.kenny.baselibrary"
        minSdkVersion 10
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'

    }

    // 移除lint检查的error
    lintOptions {
        abortOnError false
    }

    //重命名APK
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            def productFlavor = ""
            if (variant.productFlavors[0] == null) {
                productFlavor = "ALL"
            } else {
                productFlavor = variant.productFlavors[0].name.toUpperCase()
            }
            def versionCode = "V" + variant.versionCode
            def currDate = releaseTime()
            def buildType = variant.buildType.name.toUpperCase()
            def split = "_"

            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = "CommonFrame" + split + versionCode + split + productFlavor + split + currDate + split + buildType + ".apk";
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}
dependencies {
    //Android Studio中有六种依赖
    //        compile：是对所有的build type以及favlors都会参与编译并且打包到最终的apk文件中。
    //       Provided：是对所有的build type以及favlors只在编译时使用，类似eclipse中的external-libs,只参与编译，不打包到最终apk。
    //            APK：只会打包到apk文件中，而不参与编译，所以不能再代码中直接调用jar中的类或方法，否则在编译时会报错
    //   Test compile：仅仅是针对单元测试代码的编译编译以及最终打包测试apk时有效，而对正常的debug或者release apk包不起作用。
    //   debugCompile: 仅仅针对debug模式的编译和最终的debug apk打包。
    // releaseCompile: 仅仅针对Release 模式的编译和最终的Release apk打包。
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile('com.android.support:appcompat-v7:23.1.1') {
        exclude module: 'support-v4'
    }
    compile 'com.android.support:design:23.2.1'
    compile 'com.android.support:cardview-v7:23.2.1'
    compile files('libs/universal-image-loader-1.9.4.jar')
    compile files('libs/commons-io-1.4.jar')
    compile files('libs/commons-lang-2.5.jar')
    compile files('libs/ormlite-core-4.48.jar')
    compile files('libs/ormlite-android-4.48.jar')
    compile files('libs/volley.jar')
    compile files('libs/gson-2.2.4.jar')
    compile files('libs/org.apache.http.legacy.jar')
    compile files('libs/litepal-1.2.0-src.jar')
    compile files('libs/android-push.jar')
    compile project(':librarys:autolayout')
    compile 'com.tencent.bugly:crashreport:1.2.8'
    compile project(':librarys:PullToRefresh-lib')
    compile 'org.greenrobot:eventbus:3.0.0'
    //其在编译的时候为注册类构建了一个索引，而不是在运行时，这样的结果是其让EventBus 3.0的性能提升了一倍，相比2.4来说，其会是它的3到6倍
    provided 'de.greenrobot:eventbus-annotation-processor:3.0.0-beta1'
    //检测app是否内存泄漏工具，debug版本提示泄漏通知
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    //检测app是否内存泄漏工具，正式版本不提示泄漏通知
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
}

// 移除警告
// 有关详细信息, 请使用 -Xlint:deprecation 重新编译。
// 有关详细信息, 请使用 -Xlint:unchecked 重新编译。
allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

//腾讯bugly
bugly {
    appId = '900018995'    //注册时分配的App ID
    appKey = 'MRG8rUHqSmCAPBHU'  //注册时分配的App Key
}